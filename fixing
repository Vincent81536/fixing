task.spawn(function()
	local char = game.Players.LocalPlayer.Character or game.Players.LocalPlayer.CharacterAdded:Wait()
	task.wait(1)

	for _, v in ipairs(char:GetDescendants()) do
		if v:IsA("BasePart") then
			v.Anchored = false
			v.CanCollide = false
			v.Massless = true
			v.CustomPhysicalProperties = PhysicalProperties.new(0, 0, 0)
		end
	end

	for _, acc in ipairs(char:GetChildren()) do
		if acc:IsA("Accessory") and acc:FindFirstChild("Handle") then
			local handle = acc.Handle
			local att = handle:FindFirstChildOfClass("Attachment")
			local root = nil

			for _, limb in ipairs(char:GetDescendants()) do
				if limb:IsA("BasePart") and att and limb:FindFirstChild(att.Name) then
					root = limb
					break
				end
			end

			if root then
				local weld = Instance.new("WeldConstraint")
				weld.Part0 = root
				weld.Part1 = handle
				weld.Parent = handle
			end
		end
	end

	local hum = char:FindFirstChildOfClass("Humanoid")
	if hum then
		hum:SetStateEnabled(Enum.HumanoidStateType.PlatformStanding, false)
		hum:SetStateEnabled(Enum.HumanoidStateType.Physics, false)
		hum:ChangeState(Enum.HumanoidStateType.Running)
	end

	if char:FindFirstChild("HumanoidRootPart") then
		char.PrimaryPart = char.HumanoidRootPart
		char.HumanoidRootPart.Anchored = false
	end

	pcall(function()
		if sethiddenproperty then
			sethiddenproperty(game.Players.LocalPlayer, "SimulationRadius", math.huge)
		end
	end)
end)
