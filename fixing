
-- Fluxus Reanimation Lite (Krypton Rig)
local plr = game.Players.LocalPlayer
local char = plr.Character or plr.CharacterAdded:Wait()
local hum = char:WaitForChild("Humanoid")
local root = char:WaitForChild("HumanoidRootPart")
local rs = game:GetService("RunService")

-- Load Animation Utility
local function LoadAnim(id)
	local anim = Instance.new("Animation")
	anim.AnimationId = "rbxassetid://"..id
	return hum:LoadAnimation(anim)
end

-- Disable character animations
pcall(function()
	for _, track in pairs(hum:GetPlayingAnimationTracks()) do
		track:Stop()
	end
end)

-- Krypton Reanimate
local function Reanimate()
	local CloneChar = char:Clone()
	for _, part in pairs(CloneChar:GetDescendants()) do
		if part:IsA("BasePart") then
			part.Anchored = false
			part.CanCollide = false
		end
	end
	CloneChar.Name = "KryptonRig"
	CloneChar.Parent = workspace
	char.Archivable = true

	for _, v in pairs(char:GetChildren()) do
		if v:IsA("Accessory") or v:IsA("BasePart") then
			v:Destroy()
		end
	end

	char.HumanoidRootPart.CFrame = CFrame.new(0, -500, 0) -- Hide original
	return CloneChar
end

local Rig = Reanimate()
local RigHum = Rig:FindFirstChildOfClass("Humanoid")

-- Anti-shake lock
rs.Stepped:Connect(function()
	for _, part in pairs(Rig:GetDescendants()) do
		if part:IsA("BasePart") then
			part.Velocity = Vector3.zero
			part.RotVelocity = Vector3.zero
		end
	end
end)

-- Animation Setup
local IdleAnim = LoadAnim(132196401232277)
local WalkAnim = LoadAnim(13817547477)
local RunAnim = LoadAnim(96901225702491)
local JumpAnim = LoadAnim(12575070273)
local FallAnim = LoadAnim(13817539789)
local AttackAnim = LoadAnim(71308482162106)

-- Animation Logic
rs.RenderStepped:Connect(function()
	local state = RigHum:GetState()
	if state == Enum.HumanoidStateType.Running then
		if RigHum.MoveDirection.Magnitude > 0 then
			if isRunning then
				if not RunAnim.IsPlaying then RunAnim:Play() end
				WalkAnim:Stop()
			else
				if not WalkAnim.IsPlaying then WalkAnim:Play() end
				RunAnim:Stop()
			end
		else
			WalkAnim:Stop()
			RunAnim:Stop()
		end
	elseif state == Enum.HumanoidStateType.Jumping then
		JumpAnim:Play()
	elseif state == Enum.HumanoidStateType.Freefall then
		FallAnim:Play()
	else
		if not IdleAnim.IsPlaying then IdleAnim:Play() end
	end
end)

-- GUI
local function MakeButton(name, position, callback)
	local sGui = game.CoreGui
	local gui = Instance.new("ScreenGui", sGui)
	gui.Name = name.."Gui"
	local btn = Instance.new("TextButton", gui)
	btn.Size = UDim2.new(0, 100, 0, 40)
	btn.Position = position
	btn.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)
	btn.TextColor3 = Color3.new(1, 1, 1)
	btn.Text = name
	btn.Font = Enum.Font.SourceSansBold
	btn.TextSize = 18
	btn.MouseButton1Click:Connect(callback)
	return gui
end

-- Run Toggle Button
isRunning = false
local runGui = MakeButton("Run", UDim2.new(0, 10, 0, 100), function()
	isRunning = not isRunning
end)

-- Attack Button
local atkGui = MakeButton("Attack", UDim2.new(0, 120, 0, 100), function()
	AttackAnim:Play()
end)

-- Cleanup buttons on death
RigHum.Died:Connect(function()
	if runGui then runGui:Destroy() end
	if atkGui then atkGui:Destroy() end
end)
